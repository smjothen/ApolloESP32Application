/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_CALIBRATION_MESSAGE_PB_H_INCLUDED
#define PB_CALIBRATION_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* This message is included when starting the test (State = Starting) */
typedef struct _CalibrationUdpMessage_StateMessage_CalibrationRunMessage {
    uint32_t Run;
    pb_size_t SelectedSerials_count;
    char **SelectedSerials;
    char *Key;
    /* The protocol version required by the test bench */
    uint32_t ServerProtocol;
    char *SetupName;
} CalibrationUdpMessage_StateMessage_CalibrationRunMessage;

/* This message is included in Verification steps */
typedef struct _CalibrationUdpMessage_StateMessage_VerificationState {
    uint32_t TestId;
} CalibrationUdpMessage_StateMessage_VerificationState;

typedef struct _CalibrationUdpMessage_StateMessage {
    int32_t State;
    int32_t Sequence;
    bool has_Run;
    CalibrationUdpMessage_StateMessage_CalibrationRunMessage Run;
    bool has_Verification;
    CalibrationUdpMessage_StateMessage_VerificationState Verification;
} CalibrationUdpMessage_StateMessage;

typedef struct _CalibrationUdpMessage_DataMessage_PhaseSnapshot {
    double L1;
    double L2;
    double L3;
} CalibrationUdpMessage_DataMessage_PhaseSnapshot;

typedef struct _CalibrationUdpMessage_DataMessage_EnergySnapshot {
    double WattHours;
} CalibrationUdpMessage_DataMessage_EnergySnapshot;

typedef struct _CalibrationUdpMessage_DataMessage {
    pb_size_t which_message_type;
    union {
        CalibrationUdpMessage_DataMessage_PhaseSnapshot ReferenceMeterVoltage;
        CalibrationUdpMessage_DataMessage_PhaseSnapshot ReferenceMeterCurrent;
        CalibrationUdpMessage_DataMessage_EnergySnapshot ReferenceMeterEnergy;
    } message_type;
} CalibrationUdpMessage_DataMessage;

typedef struct _CalibrationUdpMessage_ChargerAck {
    uint32_t Sequence;
} CalibrationUdpMessage_ChargerAck;

typedef struct _CalibrationUdpMessage {
    bool has_State;
    CalibrationUdpMessage_StateMessage State;
    bool has_Data;
    CalibrationUdpMessage_DataMessage Data;
    bool has_Ack;
    CalibrationUdpMessage_ChargerAck Ack;
} CalibrationUdpMessage;

/* InitStatus is sent during the "Starting"-phase to let the test bench know the state of the charger */
typedef struct _ChargerStateUdpMessage_InitStatus {
    /* The protocol supported by the charger */
    uint32_t ClientProtocol;
    char *FirmwareVersion;
    /* State that helps the test bench determine which tests to run */
    bool NeedsMIDCalibration;
    bool HasProductionTestPassed;
    bool IsCalibrated;
    bool IsVerified;
    bool Has4G;
    bool Is4GVerified;
    double Uptime;
} ChargerStateUdpMessage_InitStatus;

/* Status messages are used to convey error messages from the charger to the test bench */
typedef struct _ChargerStateUdpMessage_StatusMessage {
    int32_t Id;
    int32_t Type;
    char *Status;
} ChargerStateUdpMessage_StatusMessage;

typedef struct _ChargerStateUdpMessage {
    /* Currently active calibration state on charger */
    int32_t StateAck;
    /* Charger state of the current calibration state (InProgress/Complete/Failed) */
    int32_t State;
    bool has_Status;
    ChargerStateUdpMessage_StatusMessage Status;
    /* Currently active run on charger */
    uint32_t RunAck;
    bool has_Init;
    ChargerStateUdpMessage_InitStatus Init;
    /* Latest sequence number received from server */
    uint32_t SequenceAck;
    /* Flag that specifies if the charger state is idle, and that all relays are open */
    bool IsIdle;
    char *Serial;
    /* If the charger is currently detecting that the current transformer is overloaded, the phases will be conveyed here */
    uint32_t OverloadedPhases;
} ChargerStateUdpMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define CalibrationUdpMessage_init_default       {false, CalibrationUdpMessage_StateMessage_init_default, false, CalibrationUdpMessage_DataMessage_init_default, false, CalibrationUdpMessage_ChargerAck_init_default}
#define CalibrationUdpMessage_StateMessage_init_default {0, 0, false, CalibrationUdpMessage_StateMessage_CalibrationRunMessage_init_default, false, CalibrationUdpMessage_StateMessage_VerificationState_init_default}
#define CalibrationUdpMessage_StateMessage_CalibrationRunMessage_init_default {0, 0, NULL, NULL, 0, NULL}
#define CalibrationUdpMessage_StateMessage_VerificationState_init_default {0}
#define CalibrationUdpMessage_DataMessage_init_default {0, {CalibrationUdpMessage_DataMessage_PhaseSnapshot_init_default}}
#define CalibrationUdpMessage_DataMessage_PhaseSnapshot_init_default {0, 0, 0}
#define CalibrationUdpMessage_DataMessage_EnergySnapshot_init_default {0}
#define CalibrationUdpMessage_ChargerAck_init_default {0}
#define ChargerStateUdpMessage_init_default      {0, 0, false, ChargerStateUdpMessage_StatusMessage_init_default, 0, false, ChargerStateUdpMessage_InitStatus_init_default, 0, 0, NULL, 0}
#define ChargerStateUdpMessage_InitStatus_init_default {0, NULL, 0, 0, 0, 0, 0, 0, 0}
#define ChargerStateUdpMessage_StatusMessage_init_default {0, 0, NULL}
#define CalibrationUdpMessage_init_zero          {false, CalibrationUdpMessage_StateMessage_init_zero, false, CalibrationUdpMessage_DataMessage_init_zero, false, CalibrationUdpMessage_ChargerAck_init_zero}
#define CalibrationUdpMessage_StateMessage_init_zero {0, 0, false, CalibrationUdpMessage_StateMessage_CalibrationRunMessage_init_zero, false, CalibrationUdpMessage_StateMessage_VerificationState_init_zero}
#define CalibrationUdpMessage_StateMessage_CalibrationRunMessage_init_zero {0, 0, NULL, NULL, 0, NULL}
#define CalibrationUdpMessage_StateMessage_VerificationState_init_zero {0}
#define CalibrationUdpMessage_DataMessage_init_zero {0, {CalibrationUdpMessage_DataMessage_PhaseSnapshot_init_zero}}
#define CalibrationUdpMessage_DataMessage_PhaseSnapshot_init_zero {0, 0, 0}
#define CalibrationUdpMessage_DataMessage_EnergySnapshot_init_zero {0}
#define CalibrationUdpMessage_ChargerAck_init_zero {0}
#define ChargerStateUdpMessage_init_zero         {0, 0, false, ChargerStateUdpMessage_StatusMessage_init_zero, 0, false, ChargerStateUdpMessage_InitStatus_init_zero, 0, 0, NULL, 0}
#define ChargerStateUdpMessage_InitStatus_init_zero {0, NULL, 0, 0, 0, 0, 0, 0, 0}
#define ChargerStateUdpMessage_StatusMessage_init_zero {0, 0, NULL}

/* Field tags (for use in manual encoding/decoding) */
#define CalibrationUdpMessage_StateMessage_CalibrationRunMessage_Run_tag 1
#define CalibrationUdpMessage_StateMessage_CalibrationRunMessage_SelectedSerials_tag 2
#define CalibrationUdpMessage_StateMessage_CalibrationRunMessage_Key_tag 3
#define CalibrationUdpMessage_StateMessage_CalibrationRunMessage_ServerProtocol_tag 4
#define CalibrationUdpMessage_StateMessage_CalibrationRunMessage_SetupName_tag 5
#define CalibrationUdpMessage_StateMessage_VerificationState_TestId_tag 1
#define CalibrationUdpMessage_StateMessage_State_tag 1
#define CalibrationUdpMessage_StateMessage_Sequence_tag 2
#define CalibrationUdpMessage_StateMessage_Run_tag 3
#define CalibrationUdpMessage_StateMessage_Verification_tag 4
#define CalibrationUdpMessage_DataMessage_PhaseSnapshot_L1_tag 1
#define CalibrationUdpMessage_DataMessage_PhaseSnapshot_L2_tag 2
#define CalibrationUdpMessage_DataMessage_PhaseSnapshot_L3_tag 3
#define CalibrationUdpMessage_DataMessage_EnergySnapshot_WattHours_tag 1
#define CalibrationUdpMessage_DataMessage_ReferenceMeterVoltage_tag 1
#define CalibrationUdpMessage_DataMessage_ReferenceMeterCurrent_tag 2
#define CalibrationUdpMessage_DataMessage_ReferenceMeterEnergy_tag 3
#define CalibrationUdpMessage_ChargerAck_Sequence_tag 1
#define CalibrationUdpMessage_State_tag          1
#define CalibrationUdpMessage_Data_tag           2
#define CalibrationUdpMessage_Ack_tag            3
#define ChargerStateUdpMessage_InitStatus_ClientProtocol_tag 1
#define ChargerStateUdpMessage_InitStatus_FirmwareVersion_tag 2
#define ChargerStateUdpMessage_InitStatus_NeedsMIDCalibration_tag 3
#define ChargerStateUdpMessage_InitStatus_HasProductionTestPassed_tag 10
#define ChargerStateUdpMessage_InitStatus_IsCalibrated_tag 11
#define ChargerStateUdpMessage_InitStatus_IsVerified_tag 12
#define ChargerStateUdpMessage_InitStatus_Has4G_tag 20
#define ChargerStateUdpMessage_InitStatus_Is4GVerified_tag 21
#define ChargerStateUdpMessage_InitStatus_Uptime_tag 50
#define ChargerStateUdpMessage_StatusMessage_Id_tag 1
#define ChargerStateUdpMessage_StatusMessage_Type_tag 2
#define ChargerStateUdpMessage_StatusMessage_Status_tag 3
#define ChargerStateUdpMessage_StateAck_tag      1
#define ChargerStateUdpMessage_State_tag         2
#define ChargerStateUdpMessage_Status_tag        3
#define ChargerStateUdpMessage_RunAck_tag        4
#define ChargerStateUdpMessage_Init_tag          5
#define ChargerStateUdpMessage_SequenceAck_tag   6
#define ChargerStateUdpMessage_IsIdle_tag        7
#define ChargerStateUdpMessage_Serial_tag        10
#define ChargerStateUdpMessage_OverloadedPhases_tag 50

/* Struct field encoding specification for nanopb */
#define CalibrationUdpMessage_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  State,             1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  Data,              2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  Ack,               3)
#define CalibrationUdpMessage_CALLBACK NULL
#define CalibrationUdpMessage_DEFAULT NULL
#define CalibrationUdpMessage_State_MSGTYPE CalibrationUdpMessage_StateMessage
#define CalibrationUdpMessage_Data_MSGTYPE CalibrationUdpMessage_DataMessage
#define CalibrationUdpMessage_Ack_MSGTYPE CalibrationUdpMessage_ChargerAck

#define CalibrationUdpMessage_StateMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    State,             1) \
X(a, STATIC,   SINGULAR, INT32,    Sequence,          2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  Run,               3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  Verification,      4)
#define CalibrationUdpMessage_StateMessage_CALLBACK NULL
#define CalibrationUdpMessage_StateMessage_DEFAULT NULL
#define CalibrationUdpMessage_StateMessage_Run_MSGTYPE CalibrationUdpMessage_StateMessage_CalibrationRunMessage
#define CalibrationUdpMessage_StateMessage_Verification_MSGTYPE CalibrationUdpMessage_StateMessage_VerificationState

#define CalibrationUdpMessage_StateMessage_CalibrationRunMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   Run,               1) \
X(a, POINTER,  REPEATED, STRING,   SelectedSerials,   2) \
X(a, POINTER,  SINGULAR, STRING,   Key,               3) \
X(a, STATIC,   SINGULAR, UINT32,   ServerProtocol,    4) \
X(a, POINTER,  SINGULAR, STRING,   SetupName,         5)
#define CalibrationUdpMessage_StateMessage_CalibrationRunMessage_CALLBACK NULL
#define CalibrationUdpMessage_StateMessage_CalibrationRunMessage_DEFAULT NULL

#define CalibrationUdpMessage_StateMessage_VerificationState_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   TestId,            1)
#define CalibrationUdpMessage_StateMessage_VerificationState_CALLBACK NULL
#define CalibrationUdpMessage_StateMessage_VerificationState_DEFAULT NULL

#define CalibrationUdpMessage_DataMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_type,ReferenceMeterVoltage,message_type.ReferenceMeterVoltage),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_type,ReferenceMeterCurrent,message_type.ReferenceMeterCurrent),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_type,ReferenceMeterEnergy,message_type.ReferenceMeterEnergy),   3)
#define CalibrationUdpMessage_DataMessage_CALLBACK NULL
#define CalibrationUdpMessage_DataMessage_DEFAULT NULL
#define CalibrationUdpMessage_DataMessage_message_type_ReferenceMeterVoltage_MSGTYPE CalibrationUdpMessage_DataMessage_PhaseSnapshot
#define CalibrationUdpMessage_DataMessage_message_type_ReferenceMeterCurrent_MSGTYPE CalibrationUdpMessage_DataMessage_PhaseSnapshot
#define CalibrationUdpMessage_DataMessage_message_type_ReferenceMeterEnergy_MSGTYPE CalibrationUdpMessage_DataMessage_EnergySnapshot

#define CalibrationUdpMessage_DataMessage_PhaseSnapshot_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   L1,                1) \
X(a, STATIC,   SINGULAR, DOUBLE,   L2,                2) \
X(a, STATIC,   SINGULAR, DOUBLE,   L3,                3)
#define CalibrationUdpMessage_DataMessage_PhaseSnapshot_CALLBACK NULL
#define CalibrationUdpMessage_DataMessage_PhaseSnapshot_DEFAULT NULL

#define CalibrationUdpMessage_DataMessage_EnergySnapshot_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   WattHours,         1)
#define CalibrationUdpMessage_DataMessage_EnergySnapshot_CALLBACK NULL
#define CalibrationUdpMessage_DataMessage_EnergySnapshot_DEFAULT NULL

#define CalibrationUdpMessage_ChargerAck_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   Sequence,          1)
#define CalibrationUdpMessage_ChargerAck_CALLBACK NULL
#define CalibrationUdpMessage_ChargerAck_DEFAULT NULL

#define ChargerStateUdpMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    StateAck,          1) \
X(a, STATIC,   SINGULAR, INT32,    State,             2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  Status,            3) \
X(a, STATIC,   SINGULAR, UINT32,   RunAck,            4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  Init,              5) \
X(a, STATIC,   SINGULAR, UINT32,   SequenceAck,       6) \
X(a, STATIC,   SINGULAR, BOOL,     IsIdle,            7) \
X(a, POINTER,  SINGULAR, STRING,   Serial,           10) \
X(a, STATIC,   SINGULAR, UINT32,   OverloadedPhases,  50)
#define ChargerStateUdpMessage_CALLBACK NULL
#define ChargerStateUdpMessage_DEFAULT NULL
#define ChargerStateUdpMessage_Status_MSGTYPE ChargerStateUdpMessage_StatusMessage
#define ChargerStateUdpMessage_Init_MSGTYPE ChargerStateUdpMessage_InitStatus

#define ChargerStateUdpMessage_InitStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   ClientProtocol,    1) \
X(a, POINTER,  SINGULAR, STRING,   FirmwareVersion,   2) \
X(a, STATIC,   SINGULAR, BOOL,     NeedsMIDCalibration,   3) \
X(a, STATIC,   SINGULAR, BOOL,     HasProductionTestPassed,  10) \
X(a, STATIC,   SINGULAR, BOOL,     IsCalibrated,     11) \
X(a, STATIC,   SINGULAR, BOOL,     IsVerified,       12) \
X(a, STATIC,   SINGULAR, BOOL,     Has4G,            20) \
X(a, STATIC,   SINGULAR, BOOL,     Is4GVerified,     21) \
X(a, STATIC,   SINGULAR, DOUBLE,   Uptime,           50)
#define ChargerStateUdpMessage_InitStatus_CALLBACK NULL
#define ChargerStateUdpMessage_InitStatus_DEFAULT NULL

#define ChargerStateUdpMessage_StatusMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    Id,                1) \
X(a, STATIC,   SINGULAR, INT32,    Type,              2) \
X(a, POINTER,  SINGULAR, STRING,   Status,            3)
#define ChargerStateUdpMessage_StatusMessage_CALLBACK NULL
#define ChargerStateUdpMessage_StatusMessage_DEFAULT NULL

extern const pb_msgdesc_t CalibrationUdpMessage_msg;
extern const pb_msgdesc_t CalibrationUdpMessage_StateMessage_msg;
extern const pb_msgdesc_t CalibrationUdpMessage_StateMessage_CalibrationRunMessage_msg;
extern const pb_msgdesc_t CalibrationUdpMessage_StateMessage_VerificationState_msg;
extern const pb_msgdesc_t CalibrationUdpMessage_DataMessage_msg;
extern const pb_msgdesc_t CalibrationUdpMessage_DataMessage_PhaseSnapshot_msg;
extern const pb_msgdesc_t CalibrationUdpMessage_DataMessage_EnergySnapshot_msg;
extern const pb_msgdesc_t CalibrationUdpMessage_ChargerAck_msg;
extern const pb_msgdesc_t ChargerStateUdpMessage_msg;
extern const pb_msgdesc_t ChargerStateUdpMessage_InitStatus_msg;
extern const pb_msgdesc_t ChargerStateUdpMessage_StatusMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CalibrationUdpMessage_fields &CalibrationUdpMessage_msg
#define CalibrationUdpMessage_StateMessage_fields &CalibrationUdpMessage_StateMessage_msg
#define CalibrationUdpMessage_StateMessage_CalibrationRunMessage_fields &CalibrationUdpMessage_StateMessage_CalibrationRunMessage_msg
#define CalibrationUdpMessage_StateMessage_VerificationState_fields &CalibrationUdpMessage_StateMessage_VerificationState_msg
#define CalibrationUdpMessage_DataMessage_fields &CalibrationUdpMessage_DataMessage_msg
#define CalibrationUdpMessage_DataMessage_PhaseSnapshot_fields &CalibrationUdpMessage_DataMessage_PhaseSnapshot_msg
#define CalibrationUdpMessage_DataMessage_EnergySnapshot_fields &CalibrationUdpMessage_DataMessage_EnergySnapshot_msg
#define CalibrationUdpMessage_ChargerAck_fields &CalibrationUdpMessage_ChargerAck_msg
#define ChargerStateUdpMessage_fields &ChargerStateUdpMessage_msg
#define ChargerStateUdpMessage_InitStatus_fields &ChargerStateUdpMessage_InitStatus_msg
#define ChargerStateUdpMessage_StatusMessage_fields &ChargerStateUdpMessage_StatusMessage_msg

/* Maximum encoded size of messages (where known) */
/* CalibrationUdpMessage_size depends on runtime parameters */
/* CalibrationUdpMessage_StateMessage_size depends on runtime parameters */
/* CalibrationUdpMessage_StateMessage_CalibrationRunMessage_size depends on runtime parameters */
/* ChargerStateUdpMessage_size depends on runtime parameters */
/* ChargerStateUdpMessage_InitStatus_size depends on runtime parameters */
/* ChargerStateUdpMessage_StatusMessage_size depends on runtime parameters */
#define CalibrationUdpMessage_ChargerAck_size    6
#define CalibrationUdpMessage_DataMessage_EnergySnapshot_size 9
#define CalibrationUdpMessage_DataMessage_PhaseSnapshot_size 27
#define CalibrationUdpMessage_DataMessage_size   29
#define CalibrationUdpMessage_StateMessage_VerificationState_size 6

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
